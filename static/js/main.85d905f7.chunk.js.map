{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageItems","useMemo","Math","ceil","className","classNames","disabled","href","onClick","map","item","active","length","items","App","useState","setCurrentPage","setPerPage","range","start","end","min","visibleItems","filter","_","i","id","value","onChange","event","currentTarget","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAYC,mBAAQ,WACxB,OAAOZ,EAAW,EAAGa,KAAKC,KAAKP,EAAQC,MACtC,CAACD,EAAOC,IAEX,OACE,qBAAIO,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBR,IAHhB,SAME,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAAS,WACPT,EAAaD,EAAc,IAN/B,oBAaDE,EAAUS,KAAI,SAAAC,GAAI,OACjB,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQb,IAAgBY,IAJ9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACPT,EAAaW,IALjB,SAQGA,KAdEA,MAmBT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUR,IAAgBE,EAAUY,SAH1C,SAME,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAAUY,OACzCJ,QAAS,WACPT,EAAaD,EAAc,IAN/B,wBChEFe,EAAQxB,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBoB,EAAhB,KAEMC,EAAQjB,mBAAQ,WACpB,IAAMkB,GAASrB,EAAc,GAAKD,EAAU,EACtCuB,EAAMlB,KAAKmB,IAAIR,EAAMD,OAAQd,EAAcD,GAEjD,MAAM,GAAN,OAAUsB,EAAV,cAAqBC,KACpB,CAACtB,EAAaD,IAEXyB,EAAerB,mBAAQ,WAC3B,OAAOY,EAAMU,QAAO,SAACC,EAAGC,GACtB,OAAOA,EAAI,GAAK3B,EAAc,GAAKD,GAC9B4B,EAAI,GAAK3B,EAAcD,OAE7B,CAACC,EAAaD,IAWjB,OACE,sBAAKO,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCoB,EADjC,eAC6CL,EAAMD,OADnD,OAIA,sBAAKR,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAO9B,EACP+B,SApBc,SAACC,GACvBZ,GAAYY,EAAMC,cAAcH,OAChCX,EAAe,IAaT,UAOE,wBAAQW,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOiB,EAAMD,OACbf,QAASA,EACTC,YAAaA,EACbC,aA1CmB,SAACiC,GACxBhB,EAAegB,MA4Cb,6BACGV,EAAab,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCtEnBuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.85d905f7.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageItems = useMemo(() => {\n    return getNumbers(1, Math.ceil(total / perPage));\n  }, [total, perPage]);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            onPageChange(currentPage - 1);\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pageItems.map(item => (\n        <li\n          key={item}\n          className={classNames(\n            'page-item',\n            { active: currentPage === item },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${item}`}\n            onClick={() => {\n              onPageChange(item);\n            }}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === pageItems.length },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageItems.length}\n          onClick={() => {\n            onPageChange(currentPage + 1);\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useMemo, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const range = useMemo(() => {\n    const start = (currentPage - 1) * perPage + 1;\n    const end = Math.min(items.length, currentPage * perPage);\n\n    return `${start} - ${end}`;\n  }, [currentPage, perPage]);\n\n  const visibleItems = useMemo(() => {\n    return items.filter((_, i) => {\n      return i + 1 > (currentPage - 1) * perPage\n        && i + 1 <= currentPage * perPage;\n    });\n  }, [currentPage, perPage]);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const onPerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.currentTarget.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${range} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={onPerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}